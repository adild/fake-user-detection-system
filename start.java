package start;

import java.util.*;  
import javax.mail.*;  
import javax.mail.internet.*;  
import javax.activation.*;  
import com.googlecode.javacv.FrameGrabber;
import com.googlecode.javacv.OpenCVFrameGrabber;
import com.googlecode.javacv.cpp.opencv_core.IplImage;
import static com.googlecode.javacv.cpp.opencv_highgui.cvSaveImage;
import static com.googlecode.javacv.cpp.opencv_highgui.*;
//import com.caroff.image.image.Image;
//import static idspack.Splash.SOCKET_PORT;
//import static idspack.Splash.file_to_send;
//import static idspack.Splash.id;
//import static idspack.Splash.userName;
//import static ij.gui.Roi.NORMAL;
import sun.audio.*;
import java.io.*;
import java.awt.Color;
import java.sql.*;
import java.util.TimeZone;
import java.util.Date;
import java.text.*;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
//import javax.media.Buffer;
//import javax.media.CannotRealizeException;
//import javax.media.Manager;
//import javax.media.MediaLocator;
//import javax.media.NoPlayerException;
//import javax.media.Player;
//import javax.media.control.FrameGrabbingControl;
//import javax.media.format.VideoFormat;
//import javax.media.util.BufferToImage;
import javax.swing.ImageIcon;
import javax.swing.JToggleButton;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.font.*;
import java.awt.geom.AffineTransform;
import java.io.BufferedInputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
//import javax.media.CannotRealizeException;
//import javax.media.MediaLocator;
//import javax.media.NoPlayerException;
//import javax.media.Player;
//import javax.media.control.FrameGrabbingControl;
//import javax.media.format.VideoFormat;
//import static javax.persistence.PessimisticLockScope.NORMAL;
import javax.swing.*;
//import static org.eclipse.persistence.config.CacheUsageIndirectionPolicy.Exception;
//import static org.eclipse.persistence.internal.oxm.record.json.JSONLexer.String;
//import static org.eclipse.persistence.sessions.SessionProfiler.NORMAL;
import java.sql.SQLRecoverableException;
import java.util.Properties;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;

public class start extends javax.swing.JFrame {

       //declaration ends
 public static String username;
 public static String password;
 public static String inter;
 
    public final static int SOCKET_PORT = 50000;  // you may change this
    public static String file_to_send;  // you may change this
    int flags = 0;
    int count = 0;
    int fc = 3;
    public static int id;
    String unlock;
    DataOutputStream os;
    static String shut;

    int xMouse;
    int yMouse;
    static String adil;
    static String adil1;
    public static int flag;
    DataInputStream is;

    BufferedImage bi;
    String fn;
    int no;

    public start() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userF = new javax.swing.JTextField();
        passF = new javax.swing.JPasswordField();
        ForgetLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        LOG_into_OS_Label = new javax.swing.JLabel();
        LogIntoOsLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        backfround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1014, 650));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userF.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        userF.setForeground(new java.awt.Color(0, 0, 255));
        userF.setToolTipText("ENETR CORRECT USERNAME");
        userF.setBorder(null);
        userF.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        userF.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        userF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userFActionPerformed(evt);
            }
        });
        getContentPane().add(userF, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 310, 360, 40));

        passF.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        passF.setForeground(new java.awt.Color(0, 0, 255));
        passF.setToolTipText("ENTER CORRECT PASSWORD");
        passF.setBorder(null);
        passF.setOpaque(false);
        passF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passFActionPerformed(evt);
            }
        });
        getContentPane().add(passF, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 400, 360, 40));

        ForgetLabel.setToolTipText("RECOVER YOUR PASSWORD");
        ForgetLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ForgetLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ForgetLabelMousePressed(evt);
            }
        });
        getContentPane().add(ForgetLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 510, 310, 40));

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 48)); // NOI18N
        jLabel2.setText(" X");
        jLabel2.setToolTipText("CLOSE");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel2MouseReleased(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(955, 0, 60, -1));

        LOG_into_OS_Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LOG_into_OS_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                LOG_into_OS_LabelMouseReleased(evt);
            }
        });
        getContentPane().add(LOG_into_OS_Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 610, 180, 40));

        LogIntoOsLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LogIntoOsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                LogIntoOsLabelMouseReleased(evt);
            }
        });
        getContentPane().add(LogIntoOsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 610, 160, 40));

        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel1MouseReleased(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 610, 160, 40));

        backfround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/First Front.jpg"))); // NOI18N
        backfround.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(backfround, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -30, 1020, 760));

        setSize(new java.awt.Dimension(1010, 728));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
public void sendmail()
    {
         
        username = "mgm25991@gmail.com";
        
        password = "mgm@1231";

		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		// Get the Session object.
      Session session = Session.getInstance(props,
         new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
               return new PasswordAuthentication(username, password);
            }
         });

      try {
         // Create a default MimeMessage object.
         Message message = new MimeMessage(session);

         // Set From: header field of the header.
         message.setFrom(new InternetAddress(username));

         // Set To: header field of the header.
         message.setRecipients(Message.RecipientType.TO,
            InternetAddress.parse(username));

         // Set Subject: header field
         message.setSubject("Intruder Detected at " + inter.replaceAll(".jpg", "").substring(17, 35));

         
         String filename = inter;
                 if(!(filename.equals("")))
                 {
                     // Create the message part
         BodyPart messageBodyPart = new MimeBodyPart();

         // Now set the actual message
         messageBodyPart.setText("This is message body");

         // Create a multipar message
         Multipart multipart = new MimeMultipart();

         // Set text message part
         multipart.addBodyPart(messageBodyPart);

               // Part two is attachment
         messageBodyPart = new MimeBodyPart();
         
         DataSource source = new FileDataSource(filename);
         messageBodyPart.setDataHandler(new DataHandler(source));
         messageBodyPart.setFileName(filename);
         multipart.addBodyPart(messageBodyPart);

         // Send the complete message parts
         message.setContent(multipart);
         
                     System.err.println("LANDED HERE");   
                     
                 }
                 else
                 {
                     message.setText("Intruder Detected");
                 }
    

         // Send message
         Transport.send(message);

         System.out.println("Sent message successfully....");
  
      } catch (MessagingException e) {
         throw new RuntimeException(e);
      }
    }
    private void ForgetLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ForgetLabelMousePressed
               ForgetPassword cp = new ForgetPassword();
               this.setVisible(true);
               cp.setVisible(true);
    }//GEN-LAST:event_ForgetLabelMousePressed

    private void userFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userFActionPerformed

    }//GEN-LAST:event_userFActionPerformed

    private void passFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passFActionPerformed

    private void jLabel2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseReleased

    }//GEN-LAST:event_jLabel2MouseReleased

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
                 System.exit(0);
                 System.gc();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void LOG_into_OS_LabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LOG_into_OS_LabelMouseReleased
          String usr = userF.getText();
          String psd = new String(passF.getPassword());
        
            try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/camcapturedb","root","");
            PreparedStatement ps = con.prepareStatement("select fname from tbl_reg where email= ? and pass =?");
            ps.setString(1, usr);
            ps.setString(2, psd);
            ResultSet rs = ps.executeQuery();
              if (rs.next()){
                           //insseert code strats
                  
                   try
                   {
                    DateFormat dateFormat = new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss");
                    Date date = new Date();
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/camcapturedb","root","");
                    PreparedStatement ps1 = con1.prepareStatement("insert into tbl_logs values(?,?,?,?)");
                    ps1.setString(1, null);
                    ps1.setString(2, usr);
                    ps1.setString(3, psd);
                    ps1.setString(4, dateFormat.format(date));
                    
                    
                    ps1.executeUpdate();
                    
                }
          catch (Exception ex) 
                {
                    System.out.println(ex);
                }
                  //insert code ends
                jOptionPane1.showMessageDialog(null, "Login Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
                setVisible(false);
                new Mai().setVisible(true);
              }
              else
              {
                
                  //insseert code strats
                  
                   try
               {
                     DateFormat dateFormat = new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss");
                    Date date = new Date();
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/camcapturedb","root","");
                    PreparedStatement ps1 = con1.prepareStatement("insert into tbl_logs values(?,?,?,?)");
                    ps1.setString(1, null);
                    ps1.setString(2, usr);
                    ps1.setString(3, psd);
                    ps1.setString(4, dateFormat.format(date));
                    
                    
                    ps1.executeUpdate();
                    
                }
          catch (Exception ex) 
                {
                    System.out.println(ex);
                }
                  //insert code ends
                  jOptionPane1.showMessageDialog(null, "Please Enter correct Username & Password", "Error", JOptionPane.ERROR_MESSAGE);
            count++;
               userF.setText("");
            passF.setText("");
            
             if (count >= 3) {
                OpenCVFrameGrabber grabber = new OpenCVFrameGrabber(0);
                try {
                    DateFormat dateFormat = new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss");
                    Date date = new Date();
            
                    grabber.start();
                    IplImage img = grabber.grab();
                    if (img != null) {
                        fn = "d:\\capturedImage\\" +dateFormat.format(date) + ".jpg";
                        System.out.println("fn --- "  +fn);
                        cvSaveImage(fn, img);
                        inter = fn;
                        sendmail();
            
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }     
            }
            }
            }
            catch(Exception ex)
            {
                
            }
    }//GEN-LAST:event_LOG_into_OS_LabelMouseReleased

    private void LogIntoOsLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogIntoOsLabelMouseReleased
       String usr = userF.getText();
        String psd = new String(passF.getPassword());
        
            try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/camcapturedb","root","");
            PreparedStatement ps = con.prepareStatement("select fname from tbl_reg where email= ? and pass =?");
            ps.setString(1, usr);
            ps.setString(2, psd);
            ResultSet rs = ps.executeQuery();
              if (rs.next()){
                           //insseert code strats
                  
                   try
               {
                    DateFormat dateFormat = new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss");
                    Date date = new Date();
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/camcapturedb","root","");
                    PreparedStatement ps1 = con1.prepareStatement("insert into tbl_logs values(?,?,?,?)");
                    ps1.setString(1, null);
                    ps1.setString(2, usr);
                    ps1.setString(3, psd);
                    ps1.setString(4, dateFormat.format(date));
                    
                    
                    ps1.executeUpdate();
                    
                }
          catch (Exception ex) 
                {
                    System.out.println(ex);
                }
                  //insert code ends
                jOptionPane1.showMessageDialog(null, "Login Successfully..!", "Success", JOptionPane.INFORMATION_MESSAGE);
                setVisible(false);
                new Mai().setVisible(true);
              }
              else
              {
                
                  //insseert code strats
                  
                   try
               {
                     DateFormat dateFormat = new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss");
                    Date date = new Date();
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/camcapturedb","root","");
                    PreparedStatement ps1 = con1.prepareStatement("insert into tbl_logs values(?,?,?,?)");
                    ps1.setString(1, null);
                    ps1.setString(2, usr);
                    ps1.setString(3, psd);
                    ps1.setString(4, dateFormat.format(date));
                    
                    
                    ps1.executeUpdate();
                    
                }
          catch (Exception ex) 
                {
                    System.out.println(ex);
                }
                  //insert code ends
                  jOptionPane1.showMessageDialog(null, "Please Enter correct Username & Password", "Error", JOptionPane.ERROR_MESSAGE);
            count++;
               userF.setText("");
            passF.setText("");
            
             if (count >= 3) {
                OpenCVFrameGrabber grabber = new OpenCVFrameGrabber(0);
                try {
                    DateFormat dateFormat = new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss");
                    Date date = new Date();
            
                    grabber.start();
                    IplImage img = grabber.grab();
                    if (img != null) {
                        fn = "d:\\capturedImage\\" +dateFormat.format(date) + ".jpg";
                        System.out.println("fn --- "  +fn);
                        cvSaveImage(fn, img);
                        inter = fn;
                        sendmail();
            
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }     
            }
            }
            }
            catch(Exception ex)
            {
                
            }
    }//GEN-LAST:event_LogIntoOsLabelMouseReleased

    private void jLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseReleased
        Runtime runtime = Runtime.getRuntime();
        try {
            Process proc = runtime.exec("shutdown -s -t 0");
        } catch (IOException ex) {
            Logger.getLogger(start.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);
    }//GEN-LAST:event_jLabel1MouseReleased
    
    static public BufferedImage linearResizeBi(BufferedImage origin, int width, int height) {
        BufferedImage resizedImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D g = resizedImage.createGraphics();
        float xScale = (float) width / origin.getWidth();
        float yScale = (float) height / origin.getHeight();
        AffineTransform at = AffineTransform.getScaleInstance(xScale, yScale);
        g.drawRenderedImage(origin, at);
        g.dispose();
        return resizedImage;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new start().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ForgetLabel;
    private javax.swing.JLabel LOG_into_OS_Label;
    private javax.swing.JLabel LogIntoOsLabel;
    private javax.swing.JLabel backfround;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField passF;
    private javax.swing.JTextField userF;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JOptionPane jOptionPane1;
}
